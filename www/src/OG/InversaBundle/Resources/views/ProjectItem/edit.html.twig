{% extends 'OGInversaBundle:Admin:adminbase.html.twig' %}

{% block body %}
  
<h1>ProjectItem edit</h1>

<form action="{{ path('admin_projectitem_update', { 'id': entity.id }) }}" method="post" {{ form_enctype(edit_form) }}>
    {{ form_widget(edit_form) }}
        
    {# store the prototype on the data-prototype attribute #}
    <ul id="document-list" data-prototype="">
        {{ form_row(edit_form.documents.get('prototype')) }}
    </ul>
    
    <a href="#" id="add-document">Add document</a>
    
    <p>
        <button type="submit">Edit</button>
    </p>
</form>

<ul class="record_actions">
    <li>
        <a href="{{ path('admin_projectitem') }}">
            Back to the list
        </a>
    </li>
    <li>
        <form action="{{ path('admin_projectitem_delete', { 'id': entity.id }) }}" method="post">
            {{ form_widget(delete_form) }}
            <button type="submit">Delete</button>
        </form>
    </li>
</ul>

{% endblock %}

{% block javascripts %}

  {{ parent() }} 
<script type="text/javascript">
    // keep track of how many document fields have been rendered
    var documentCount = '{{ edit_form.documents | length }}';

    $(document).ready(function() {
        $('#add-document').click(function() {
            var documentList = $('#document-list');

            // grab the prototype template
            var newWidget = documentList.attr('data-prototype');
            
            // replace the "$$name$$" used in the id and name of the prototype
            // with a number that's unique to our emails
            // end name attribute looks like name="contact[emails][2]"
            newWidget = newWidget.replace(/\$\$name\$\$/g, documentCount);
            documentCount++;

            // create a new list element and add it to our list
            var newLi = $('<li></li>').html(newWidget);
            newLi.appendTo(jQuery('#document-list'));

            return false;
        });
    });
</script>
{% endblock %}