<?php

namespace OG\InversaBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Doctrine\ORM\Mapping as ORM;

/**
 * OG\InversaBundle\Entity\InversaUser
 */
class InversaUser implements UserInterface
{
    /**
     * @var integer $id
     */
    private $id;

    /**
     * @var string $loginname
     */
    private $loginname;

    /**
     * @var string $name
     */
    private $name;

    /**
     * @var string $firstname
     */
    private $firstname;

    /**
     * @var string $email
     */
    private $email;

    /**
     * @var string $password
     */
    private $password;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set loginname
     *
     * @param string $loginname
     */
    public function setLoginname($loginname)
    {
        $this->loginname = $loginname;
    }

    /**
     * Get loginname
     *
     * @return string 
     */
    public function getLoginname()
    {
        return $this->loginname;
    }

    /**
     * Set name
     *
     * @param string $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set firstname
     *
     * @param string $firstname
     */
    public function setFirstname($firstname)
    {
        $this->firstname = $firstname;
    }

    /**
     * Get firstname
     *
     * @return string 
     */
    public function getFirstname()
    {
        return $this->firstname;
    }

    /**
     * Set email
     *
     * @param string $email
     */
    public function setEmail($email)
    {
        $this->email = $email;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set password
     *
     * @param string $password
     */
    public function setPassword($password)
    {
        $this->password = $password;
    }

    /**
     * Get password
     *
     * @return string 
     */
    public function getPassword()
    {
        return $this->password;
    }
}