<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SyrinxProject', 'doctrine');

/**
 * BaseSyrinxProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $description
 * @property string $image
 * @property string $file1
 * @property string $file1name
 * @property string $file2
 * @property string $file2name
 * @property string $file3
 * @property string $file3name
 * @property string $file4
 * @property string $file4name
 * @property string $link1
 * @property string $link1name
 * @property string $link2
 * @property string $link2name
 * @property boolean $is_published
 * 
 * @method string        getTitle()        Returns the current record's "title" value
 * @method string        getDescription()  Returns the current record's "description" value
 * @method string        getImage()        Returns the current record's "image" value
 * @method string        getFile1()        Returns the current record's "file1" value
 * @method string        getFile1name()    Returns the current record's "file1name" value
 * @method string        getFile2()        Returns the current record's "file2" value
 * @method string        getFile2name()    Returns the current record's "file2name" value
 * @method string        getFile3()        Returns the current record's "file3" value
 * @method string        getFile3name()    Returns the current record's "file3name" value
 * @method string        getFile4()        Returns the current record's "file4" value
 * @method string        getFile4name()    Returns the current record's "file4name" value
 * @method string        getLink1()        Returns the current record's "link1" value
 * @method string        getLink1name()    Returns the current record's "link1name" value
 * @method string        getLink2()        Returns the current record's "link2" value
 * @method string        getLink2name()    Returns the current record's "link2name" value
 * @method boolean       getIsPublished()  Returns the current record's "is_published" value
 * @method SyrinxProject setTitle()        Sets the current record's "title" value
 * @method SyrinxProject setDescription()  Sets the current record's "description" value
 * @method SyrinxProject setImage()        Sets the current record's "image" value
 * @method SyrinxProject setFile1()        Sets the current record's "file1" value
 * @method SyrinxProject setFile1name()    Sets the current record's "file1name" value
 * @method SyrinxProject setFile2()        Sets the current record's "file2" value
 * @method SyrinxProject setFile2name()    Sets the current record's "file2name" value
 * @method SyrinxProject setFile3()        Sets the current record's "file3" value
 * @method SyrinxProject setFile3name()    Sets the current record's "file3name" value
 * @method SyrinxProject setFile4()        Sets the current record's "file4" value
 * @method SyrinxProject setFile4name()    Sets the current record's "file4name" value
 * @method SyrinxProject setLink1()        Sets the current record's "link1" value
 * @method SyrinxProject setLink1name()    Sets the current record's "link1name" value
 * @method SyrinxProject setLink2()        Sets the current record's "link2" value
 * @method SyrinxProject setLink2name()    Sets the current record's "link2name" value
 * @method SyrinxProject setIsPublished()  Sets the current record's "is_published" value
 * 
 * @package    syrinx
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSyrinxProject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('syrinx_project');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('image', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file1', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file1name', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file2', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file2name', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file3', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file3name', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file4', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('file4name', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('link1', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('link1name', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('link2', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('link2name', 'string', 1024, array(
             'type' => 'string',
             'length' => 1024,
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}